#!/usr/bin/python3
'''
Defines Base Class
'''
import cmd
from datetime import datetime
import json
import uuid

class BaseModel:
    """base class for Airbnb clone project"""

    def __init__(self, *args, **kwargs):
        """initializer
        Args
        """
        if kwargs is not None:
            if 'created_at' in kwargs.keys():
                self.created_at = datetime.strptime(kwargs['created_at'],
                                                    "%Y-%m-%dT%H:%M:%S.%f")
            else:
                self.created_at = datetime.now()
            if 'created_at' in kwargs.keys():
                self.updated_at = datetime.strptime(kwargs['updated_at'],
                                                    "%Y-%m-%dT%H:%M:%S.%f")
            else:
                self.updated_at = datetime.now()
        else:
            self.id = str(uuid.uuid4())
            self.created_at = datetime.now()
            self.updated_at = datetime.now()


    def __str__(self):
        """ returns string of info about base model"""
        return ('[{}] ({}) {}'.format(self.__class__.__name__, self.id,
                                      self.__dict__))

    def save(self):
        self.updated_at = datetime.now()

    def to_dict(self):
        self.created_at = self.created_at.isoformat()
        self.updated_at = self.updated_at.isoformat()
        my_dic = {}
        for key, val in self.__dict__.items():
            my_dic[key] = val
        my_dic['__class__'] = self.__class__.__name__
        return my_dic
